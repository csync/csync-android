/*
 * Copyright IBM Corporation 2016
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
  repositories {
    mavenCentral()
    jcenter()
  }

  dependencies {
    classpath 'com.google.gms:google-services:1.4.0-beta3'
  }
}

// Required because retrolambda is on maven central
repositories {
  mavenCentral()
}

apply plugin: 'com.android.library'

// Load keystore
def keystorePropertiesFile = rootProject.file("keystore.properties");
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    defaultConfig {
        minSdkVersion 8
        targetSdkVersion 23
        versionCode 1
        versionName "1.0.0"

        buildConfigField 'String', 'CSYNC_HOST', keystoreProperties["CSYNC_HOST"]
        buildConfigField 'int', 'CSYNC_PORT', keystoreProperties["CSYNC_PORT"]
        buildConfigField 'String', 'CSYNC_DEMO_PROVIDER', keystoreProperties["CSYNC_DEMO_PROVIDER"]
        buildConfigField 'String', 'CSYNC_DEMO_TOKEN', keystoreProperties["CSYNC_DEMO_TOKEN"]
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
    }

    sourceSets {
        main {
            java {
                srcDir 'csync/main/java'
            }
        }
        test{
            java {
              srcDir 'csync/test/java'
            }
        }
    }

    lintOptions {
          abortOnError false
    }
}

dependencies {
  //Android library module
  compile 'io.reactivex:rxjava:1.0.14'
  compile 'com.android.support:appcompat-v7:23.3.0'
  compile 'com.squareup.okhttp3:okhttp-ws:3.2.0'
  compile 'io.jsonwebtoken:jjwt:0.5.1'
  compile 'com.google.code.gson:gson:2.4'

  //JVM Unit Tests
  testCompile 'junit:junit:4.12'
  testCompile 'org.mockito:mockito-core:1.10.19'
  testCompile "org.robolectric:robolectric:3.0"
}

task javadoc(type: Javadoc) {
  source = android.sourceSets.main.java.srcDirs
  classpath = configurations.compile
  classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
  destinationDir = file("docs")
  exclude "**/internals/**"
  failOnError false
}